// <auto-generated />
using System;
using BlogpostService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogpostService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250924142224_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BlogpostService.Domain.Blogpost", b =>
                {
                    b.Property<Guid>("BlogPostId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AuthorId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("DisLikes")
                        .HasColumnType("bigint");

                    b.Property<long>("Likes")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("BlogPostId");

                    b.ToTable("Blogposts", (string)null);
                });

            modelBuilder.Entity("BlogpostService.Domain.Comment", b =>
                {
                    b.Property<Guid>("CommentId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AuthorId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BlogPostId")
                        .HasMaxLength(36)
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.HasKey("CommentId");

                    b.HasIndex("BlogPostId");

                    b.HasIndex("ParentId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("BlogpostService.Domain.Comment", b =>
                {
                    b.HasOne("BlogpostService.Domain.Blogpost", "Blogpost")
                        .WithMany("Comments")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogpostService.Domain.Comment", "Parent")
                        .WithMany("Replies")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Blogpost");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("BlogpostService.Domain.Blogpost", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("BlogpostService.Domain.Comment", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
